cmake_minimum_required(VERSION 2.8.4)
project(glGraphics)
set(INCLUDE_DIRECTORIES "/usr/local/include")
set(SOURCE_FILES main.cpp gpu_program.cpp debug.cpp static_mesh.cpp render_resources.cpp config_file.cpp particles_system.cpp transformable_object.cpp spline_path.cpp volumetric_fog.cpp exs3d.cpp screen_overlay.cpp sky_box.cpp statistics.cpp demo_scene.cpp font_resource.cpp render_resources_impl.hpp render_resources.hpp frame_buffer.cpp binary_stream.cpp material.cpp water_plane.cpp gpu_buffer.cpp camera.hpp camera.cpp texture.cpp resource_manager_impl.hpp resource.hpp resource_manager.hpp render_window.cpp mesh_renderable_object.cpp renderable.hpp fps_camera.cpp scene.cpp mesh_impl.hpp binary_stream_impl.hpp gpu_buffer_impl.hpp gpu_buffer.hpp math3D.hpp math_ex.hpp oo_extensions.hpp mesh.hpp)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake_modules" CMAKE_MODULE_PATH)
set(CMAKE_CXX_FLAGS "-std=c++11 -pipe")
find_package(OpenGL REQUIRED)
find_package(Boost 1.5.0 COMPONENTS filesystem system REQUIRED)
find_package(glbinding REQUIRED)
find_package(GLFW   REQUIRED)
find_package(SFML 2 REQUIRED window system graphics)
include_directories(${Boost_INCLUDE_DIRS} ${INCLUDE_DIRECTORIES} "/usr/include/freetype2/")
add_executable(glGraphics ${SOURCE_FILES})
#a sort of real bullshit
set(GLFW_LIBRARIES ${GLFW_LIBRARIES} -lrt -lXrandr -lXinerama -lXi -lXcursor -lGL -lm -ldl -lXrender -ldrm -lXdamage -lX11-xcb -lxcb-glx -lxcb-dri2 -lxcb-dri3 -lxcb-present -lxcb-sync -lxshmfence -lXxf86vm -lXfixes -lXext -lX11 -lpthread -lxcb -lXau -lXdmcp)
target_link_libraries(glGraphics "/usr/local/lib/libSOIL.a" ${GLBINDING_LIBRARIES} ${GLFW_LIBRARIES} ${SFML_LIBRARIES} ${Boost_LIBRARIES})
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -pipe -DNDEBUG -march=native -fno-math-errno -ffinite-math-only -fno-trapping-math -fgcse-sm -fgcse-las -fgcse-after-reload -funsafe-loop-optimizations -Wunsafe-loop-optimizations -fdevirtualize-speculatively -flive-range-shrinkage")